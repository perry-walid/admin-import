<!-- app/views/imports/new.html.erb -->
<div class="card">
  <div class="card-header bg-primary text-white">
    <h4 class="mb-0"><i class="fas fa-file-import me-2"></i>Import Excel Files</h4>
  </div>
  <div class="card-body">
    <%= form_with url: imports_path, local: true, multipart: true, class: "dropzone-form" do |form| %>
      <div class="upload-container border rounded p-5 text-center mb-4" id="dropZone">
        <i class="fas fa-cloud-upload-alt fa-3x text-muted mb-3"></i>
        <h5>Drag and drop your Excel files here</h5>
        <p class="text-muted">or</p>
        <div class="mb-3">
          <%= file_field_tag 'file[]', multiple: true, accept: ".xlsx, .xls", class: "d-none", id: "fileInput" %>
          <button type="button" class="btn btn-outline-primary" onclick="document.getElementById('fileInput').click()">
            <i class="fas fa-folder-open me-2"></i>Browse Files
          </button>
        </div>
        <div id="fileList" class="text-start mt-3"></div>
      </div>
      
      <div class="text-center">
        <%= form.submit 'Import Files', class: "btn btn-primary btn-lg", id: "submitBtn", disabled: true %>
      </div>
    <% end %>
  </div>
</div>

<% content_for :head do %>
  <style>
    .upload-container {
      border: 2px dashed #ccc !important;
      transition: all 0.3s ease;
    }
    
    .upload-container.dragover {
      border-color: #0d6efd !important;
      background-color: rgba(13, 110, 253, 0.05);
    }
    
    .file-item {
      display: flex;
      align-items: center;
      padding: 8px;
      margin: 5px 0;
      background: #f8f9fa;
      border-radius: 4px;
    }
    
    .remove-file {
      color: #dc3545;
      cursor: pointer;
    }
  </style>
<% end %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const dropZone = document.getElementById('dropZone');
    const fileInput = document.getElementById('fileInput');
    const fileList = document.getElementById('fileList');
    const submitBtn = document.getElementById('submitBtn');
    let files = [];

    // Drag and drop handlers
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
      dropZone.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
      e.preventDefault();
      e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
      dropZone.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
      dropZone.addEventListener(eventName, unhighlight, false);
    });

    function highlight(e) {
      dropZone.classList.add('dragover');
    }

    function unhighlight(e) {
      dropZone.classList.remove('dragover');
    }

    dropZone.addEventListener('drop', handleDrop, false);
    fileInput.addEventListener('change', handleFiles, false);

    function handleDrop(e) {
      const dt = e.dataTransfer;
      const newFiles = [...dt.files];
      handleFileSelection(newFiles);
    }

    function handleFiles(e) {
      const newFiles = [...e.target.files];
      handleFileSelection(newFiles);
    }

    function handleFileSelection(newFiles) {
      const validFiles = newFiles.filter(file => 
        file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ||
        file.type === 'application/vnd.ms-excel'
      );

      if (validFiles.length !== newFiles.length) {
        alert('Some files were skipped. Only Excel files (.xls, .xlsx) are allowed.');
      }

      files = [...files, ...validFiles];
      updateFileList();
      updateSubmitButton();
    }

    function updateFileList() {
      fileList.innerHTML = files.map((file, index) => `
        <div class="file-item">
          <i class="fas fa-file-excel text-success me-2"></i>
          <span class="flex-grow-1">${file.name}</span>
          <i class="fas fa-times remove-file" data-index="${index}"></i>
        </div>
      `).join('');

      document.querySelectorAll('.remove-file').forEach(button => {
        button.addEventListener('click', function() {
          const index = parseInt(this.dataset.index);
          files.splice(index, 1);
          updateFileList();
          updateSubmitButton();
        });
      });
    }

    function updateSubmitButton() {
      submitBtn.disabled = files.length === 0;
    }
  });
</script>